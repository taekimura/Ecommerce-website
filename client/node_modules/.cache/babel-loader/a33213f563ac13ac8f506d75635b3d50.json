{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sheep\\\\Desktop\\\\clothing-website\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectCollectionLoaded } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetchingCollections,\n      isCollectionsLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isFetchingCollections\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching,\n  isCollectionsLoaded: selectCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/sheep/Desktop/clothing-website/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","selectIsCollectionFetching","selectCollectionLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isFetchingCollections","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,EAAoCC,sBAApC,QAAiE,iCAAjE;AAGA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAClCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACP,MAAAA;AAAD,QAA+B,KAAKQ,KAA1C;AACAR,IAAAA,0BAA0B;AAC7B;;AAEDS,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,qBAAR;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAEL,KAAK,IACb,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQG,oBAAC,KAAD;AACK,MAAA,IAAI,EAAI,GAAEE,KAAK,CAACG,IAAK,gBAD1B;AAEK,MAAA,MAAM,EAAEL,KAAK,IACT,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAA+DJ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARH,CADJ;AAiBH;;AA1BiC;;AA6BtC,MAAMM,eAAe,GAAGnB,wBAAwB,CAAC;AAC7CgB,EAAAA,qBAAqB,EAAEV,0BADsB;AAE7CW,EAAAA,mBAAmB,EAAEV;AAFwB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CACtBkB,eADsB,EAEtBC,kBAFsB,CAAP,CAGbV,QAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {createStructuredSelector} from 'reselect';\r\nimport {connect} from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport {selectIsCollectionFetching, selectCollectionLoaded} from '../../redux/shop/shop.selectors';\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n    componentDidMount(){ \r\n        const {fetchCollectionsStartAsync} = this.props;\r\n        fetchCollectionsStartAsync();    \r\n    }\r\n\r\n    render(){\r\n        const {match, isFetchingCollections, isCollectionsLoaded} = this.props;\r\n\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`} \r\n                    render={props =>(\r\n                    <CollectionsOverviewWithSpinner isLoading={isFetchingCollections}{...props} />\r\n                    )}\r\n                />\r\n               <Route \r\n                    path ={`${match.path}/:collectionId`}\r\n                    render={props => (\r\n                        <CollectionPageWithSpinner isLoading={!isCollectionsLoaded}{...props} />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetchingCollections: selectIsCollectionFetching,\r\n    isCollectionsLoaded: selectCollectionLoaded\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n \r\nexport default connect(\r\nmapStateToProps, \r\nmapDispatchToProps\r\n)(ShopPage);"]},"metadata":{},"sourceType":"module"}